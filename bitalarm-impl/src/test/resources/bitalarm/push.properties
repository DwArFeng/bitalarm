###################################################
#                     global                      #
###################################################
# \u5F53\u524D\u7684\u63A8\u9001\u5668\u7C7B\u578B\u3002
# \u76EE\u524D\u8BE5\u9879\u76EE\u652F\u6301\u7684\u63A8\u9001\u5668\u7C7B\u578B\u6709:
#   drain: \u7B80\u5355\u7684\u4E22\u5F03\u6389\u6240\u6709\u6D88\u606F\u7684\u63A8\u9001\u5668\u3002
#   partial_drain: \u4E22\u5F03\u6389\u90E8\u5206\u6D88\u606F\u7684\u63A8\u9001\u5668\u3002
#   multi: \u540C\u65F6\u5C06\u6D88\u606F\u63A8\u9001\u7ED9\u6240\u6709\u4EE3\u7406\u7684\u591A\u91CD\u63A8\u9001\u5668\u3002
#   native.kafka: \u4F7F\u7528\u539F\u751F\u6570\u636E\u7684\u57FA\u4E8EKafka\u6D88\u606F\u961F\u5217\u7684\u63A8\u9001\u5668\u3002
#   dcti.kafka: \u4F7F\u7528dcti\u6807\u51C6\u91C7\u96C6\u6570\u636E\u4FE1\u606F\u7684\u57FA\u4E8EKafka\u6D88\u606F\u961F\u5217\u7684\u63A8\u9001\u5668\u3002
#
# \u5BF9\u4E8E\u4E00\u4E2A\u5177\u4F53\u7684\u9879\u76EE\uFF0C\u5F88\u53EF\u80FD\u53EA\u7528\u4E00\u4E2A\u63A8\u9001\u5668\u3002\u6B64\u65F6\u5E0C\u671B\u52A0\u8F7D
# \u63A8\u9001\u5668\u65F6\u53EA\u52A0\u8F7D\u9700\u8981\u7684\u90A3\u4E2A\uFF0C\u5176\u4F59\u7684\u63A8\u9001\u5668\u4E0D\u52A0\u8F7D\u3002\u8FD9\u4E2A\u9700\u6C42
# \u53EF\u4EE5\u901A\u8FC7\u7F16\u8F91 application-context-scan.xml \u5B9E\u73B0\u3002
pusher.type=drain
#
###################################################
#                      drain                      #
###################################################
# drain\u63A8\u9001\u5668\u6CA1\u6709\u4EFB\u4F55\u914D\u7F6E\u3002
#
###################################################
#                  partial_drain                  #
###################################################
# \u4EE3\u7406\u7684\u63A8\u9001\u5668\u3002
pusher.partial_drain.delegate_type=native.kafka
# \u662F\u5426\u4E22\u5F03\u6389\u5B9E\u65F6\u6570\u636E\u63A8\u9001\u3002
pusher.partial_drain.drain_realtime_value=true
# \u662F\u5426\u4E22\u5F03\u6389\u6301\u4E45\u6570\u636E\u63A8\u9001\u3002
pusher.partial_drain.drain_persistence_value=true
# \u662F\u5426\u4E22\u5F03\u6389\u8FC7\u6EE4\u6570\u636E\u63A8\u9001\u3002
pusher.partial_drain.drain_filtered_value=true
# \u662F\u5426\u4E22\u5F03\u6389\u89E6\u53D1\u6570\u636E\u63A8\u9001\u3002
pusher.partial_drain.drain_triggered_value=true
#
###################################################
#                      multi                      #
###################################################
# \u4EE3\u7406\u7684\u63A8\u9001\u5668\uFF0C\u63A8\u9001\u5668\u4E4B\u95F4\u4EE5\u9017\u53F7\u5206\u9694\u3002
pusher.multi.delegate_types=native.kafka
#
###################################################
#                   native.kafka                  #
###################################################
# broker\u96C6\u7FA4\u3002
pusher.native.kafka.bootstrap_servers=your ip here like ip1:9092,ip2:9092,ip3:9092
# \u8FDE\u63A5\u5C5E\u6027\u3002
pusher.native.kafka.acks=all
# \u53D1\u9001\u5931\u8D25\u91CD\u8BD5\u6B21\u6570\u3002
pusher.native.kafka.retries=3
pusher.native.kafka.linger=10
# \u7684\u6279\u5904\u7406\u7F13\u51B2\u533A\u5927\u5C0F\u3002
pusher.native.kafka.buffer_memory=40960
# \u6279\u5904\u7406\u6761\u6570\uFF1A\u5F53\u591A\u4E2A\u8BB0\u5F55\u88AB\u53D1\u9001\u5230\u540C\u4E00\u4E2A\u5206\u533A\u65F6\uFF0C\u751F\u4EA7\u8005\u4F1A\u5C1D\u8BD5\u5C06\u8BB0\u5F55\u5408\u5E76\u5230\u66F4\u5C11\u7684\u8BF7\u6C42\u4E2D\u3002\u8FD9\u6709\u52A9\u4E8E\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u7684\u6027\u80FD\u3002
pusher.native.kafka.batch_size=4096
# Kafka\u4E8B\u52A1\u7684\u524D\u7F00\u3002
pusher.native.kafka.transaction_prefix=fdr.pusher.
# \u6570\u636E\u88AB\u8FC7\u6EE4\u65F6\u5411Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.native.kafka.topic.data_filtered=fdr.pusher.data_filtered
# \u6570\u636E\u88AB\u89E6\u53D1\u65F6\u5411Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.native.kafka.topic.data_triggered=fdr.pusher.data_triggered
# \u5B9E\u65F6\u6570\u636E\u66F4\u65B0\u65F6Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.native.kafka.topic.realtime_updated=fdr.pusher.realtime_updated
# \u6301\u4E45\u6570\u636E\u8BB0\u5F55\u65F6\u5411Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.native.kafka.topic.persistence_recorded=fdr.pusher.persistence_recorded
#
###################################################
#                    dcti.kafka                   #
###################################################
# broker\u96C6\u7FA4\u3002
pusher.dcti.kafka.bootstrap_servers=your ip here like ip1:9092,ip2:9092,ip3:9092
# \u8FDE\u63A5\u5C5E\u6027\u3002
pusher.dcti.kafka.acks=all
# \u53D1\u9001\u5931\u8D25\u91CD\u8BD5\u6B21\u6570\u3002
pusher.dcti.kafka.retries=3
pusher.dcti.kafka.linger=10
# \u7684\u6279\u5904\u7406\u7F13\u51B2\u533A\u5927\u5C0F\u3002
pusher.dcti.kafka.buffer_memory=40960
# \u6279\u5904\u7406\u6761\u6570\uFF1A\u5F53\u591A\u4E2A\u8BB0\u5F55\u88AB\u53D1\u9001\u5230\u540C\u4E00\u4E2A\u5206\u533A\u65F6\uFF0C\u751F\u4EA7\u8005\u4F1A\u5C1D\u8BD5\u5C06\u8BB0\u5F55\u5408\u5E76\u5230\u66F4\u5C11\u7684\u8BF7\u6C42\u4E2D\u3002\u8FD9\u6709\u52A9\u4E8E\u5BA2\u6237\u7AEF\u548C\u670D\u52A1\u5668\u7684\u6027\u80FD\u3002
pusher.dcti.kafka.batch_size=4096
# Kafka\u4E8B\u52A1\u7684\u524D\u7F00\u3002
pusher.dcti.kafka.transaction_prefix=fdr.pusher.
# \u6570\u636E\u88AB\u8FC7\u6EE4\u65F6\u5411Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.dcti.kafka.topic.data_filtered=fdr.dcti.data_filtered
# \u6570\u636E\u88AB\u89E6\u53D1\u65F6\u5411Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.dcti.kafka.topic.data_triggered=fdr.dcti.data_triggered
# \u5B9E\u65F6\u6570\u636E\u66F4\u65B0\u65F6Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.dcti.kafka.topic.realtime_updated=fdr.dcti.realtime_updated
# \u6301\u4E45\u6570\u636E\u8BB0\u5F55\u65F6\u5411Kafka\u53D1\u9001\u7684\u4E3B\u9898\u3002
pusher.dcti.kafka.topic.persistence_recorded=fdr.dcti.persistence_recorded
